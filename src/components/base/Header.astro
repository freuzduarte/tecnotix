---

---

<header
  id="main-header"
  class="fixed w-full top-0 z-50 bg-black/95 backdrop-blur-sm border-b border-gray-800 transition-all duration-300"
>
  <nav class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-20">
      <div
        class="flex items-center w-full md:w-auto justify-center md:justify-start"
      >
        <a href="#inicio" class="flex items-center space-x-3">
          <div class="logo-container">
            <svg
              id="logo-animated"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="837.0139770507812 837.0139770507812 1325.97607421875 1325.97607421875"
              class="w-12 h-12"
              fill-rule="evenodd"
              clip-rule="evenodd"
              stroke-linejoin="round"
              stroke-miterlimit="2"
            >
              <path
                id="logo-t"
                d="M2162.99,837.014L2041.99,1079.01L1611.99,1079.01L1420,1462.99L1635,1892.99L1500,2162.99L1150,1462.99L1341.99,1079.01L958.014,1079.01L837.014,837.014L2162.99,837.014Z"
                fill="#FFFFFF"></path>
              <path
                id="logo-polygon"
                d="M1713.5,1735.99L1578.5,1465.99L1701.99,1219.01L1971.99,1219.01L1713.5,1735.99Z"
                fill="#25A1B0"></path>
            </svg>
          </div>
          <div class="hidden md:block text-2xl font-bold text-white">
            Tecnotix <span class="text-primary">Solutions</span>
          </div>
        </a>
      </div>

      <!-- <div class="hidden md:block">
        <div class="ml-10 flex items-center space-x-8">
          <a href="#inicio" class="nav-link">Inicio</a>
          <a href="#servicios" class="nav-link">Servicios</a>
          <a href="#nosotros" class="nav-link">Nosotros</a>
          <a href="#contacto" class="nav-link">Contacto</a>
        </div>
      </div> -->

      <!-- <div class="md:hidden">
        <button
          type="button"
          class="mobile-menu-button text-white hover:text-primary focus:outline-none"
        >
          <svg
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div> -->
    </div>

    <!-- Mobile menu -->
    <!-- <div class="md:hidden mobile-menu hidden">
      <div
        class="px-2 pt-2 pb-3 space-y-1 bg-black/95 border-t border-gray-800"
      >
        <a
          href="#inicio"
          class="block px-3 py-2 text-white hover:text-primary transition-colors duration-300"
          >Inicio</a
        >
        <a
          href="#servicios"
          class="block px-3 py-2 text-white hover:text-primary transition-colors duration-300"
          >Servicios</a
        >
        <a
          href="#nosotros"
          class="block px-3 py-2 text-white hover:text-primary transition-colors duration-300"
          >Nosotros</a
        >
        <a
          href="#contacto"
          class="block px-3 py-2 text-white hover:text-primary transition-colors duration-300"
          >Contacto</a
        >
      </div>
    </div> -->
  </nav>
</header>

<style>
  .logo-container {
    position: relative;
  }

  .logo-container svg {
    will-change: transform;
  }

  #logo-t {
    fill: #ffffff;
  }

  #logo-polygon {
    fill: #25a1b0;
    transform-origin: 50% 50%;
    transform-box: fill-box;
    transition:
      transform 1s ease-in-out,
      fill 0.3s ease;
  }

  .logo-container:hover #logo-polygon {
    transform: rotate(360deg);
    fill: #ffffff;
  }

  .logo-container:hover #logo-t {
    fill: #25a1b0;
  }

  /* Reset suave cuando termina la animación */
  .logo-container:not(:hover) #logo-polygon {
    transition: transform 0.6s cubic-bezier(0.25, 0.1, 0.25, 1);
  }

  .nav-link {
    position: relative;
    color: white;
    font-weight: 500;
    padding: 12px 20px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 8px;
  }

  .nav-link::before {
    content: "";
    position: absolute;
    bottom: 8px;
    left: 50%;
    width: 0;
    height: 2px;
    background: linear-gradient(
      90deg,
      var(--color-primary),
      var(--color-primary-light)
    );
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateX(-50%);
  }

  .nav-link:hover {
    color: var(--color-primary);
    background: rgba(var(--color-primary), 0.1);
  }

  .nav-link:hover::before {
    width: 60%;
  }
</style>

<script>
  // Importar GSAP
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuButton = document.querySelector(".mobile-menu-button");
    const mobileMenu = document.querySelector(".mobile-menu");
    const header = document.getElementById("main-header");
    const logoContainer = document.querySelector(".logo-container");
    const logoT = document.getElementById("logo-t");
    const navLinks = document.querySelectorAll(".nav-link");
    let isMenuOpen = false;

    // Configuración de eventos de hover para el logo
    if (logoContainer && logoT) {
      logoContainer.addEventListener("mouseenter", () => {
        // Cambio de color suave con GSAP
        gsap.to(logoT, {
          fill: "#25A1B0",
          duration: 0.3,
        });
      });

      logoContainer.addEventListener("mouseleave", () => {
        // Restaurar colores al salir
        gsap.to(logoT, {
          fill: "#ffffff",
          duration: 0.3,
        });
      });
    }

    // Animación de los enlaces de navegación
    navLinks.forEach((link) => {
      link.addEventListener("mouseenter", () => {
        gsap.to(link, {
          y: -2,
          duration: 0.3,
          ease: "power2.out",
        });
      });

      link.addEventListener("mouseleave", () => {
        gsap.to(link, {
          y: 0,
          duration: 0.3,
          ease: "power2.out",
        });
      });
    });

    // Menú móvil
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener("click", () => {
        isMenuOpen = !isMenuOpen;

        if (isMenuOpen) {
          gsap.to(mobileMenu, {
            height: "auto",
            opacity: 1,
            duration: 0.3,
            ease: "power2.inOut",
            onStart: () => mobileMenu.classList.remove("hidden"),
          });
        } else {
          gsap.to(mobileMenu, {
            height: 0,
            opacity: 0,
            duration: 0.3,
            ease: "power2.inOut",
            onComplete: () => mobileMenu.classList.add("hidden"),
          });
        }
      });
    }

    // Efecto de scroll con GSAP
    if (header && logoContainer) {
      let lastScrollY = window.scrollY;

      // Configuración inicial
      gsap.set(header, { y: 0 });

      // Animación del scroll
      window.addEventListener("scroll", () => {
        const currentScroll = window.scrollY;

        // Mostrar/ocultar header al hacer scroll
        if (currentScroll > lastScrollY && currentScroll > 100) {
          // Scroll hacia abajo
          gsap.to(header, {
            y: "-100%",
            duration: 0.3,
            ease: "power2.inOut",
          });
        } else if (currentScroll < lastScrollY) {
          // Scroll hacia arriba
          gsap.to(header, {
            y: 0,
            duration: 0.3,
            ease: "power2.inOut",
          });
        }

        // Reducir tamaño del header al hacer scroll
        if (currentScroll > 50) {
          gsap.to(header, {
            paddingTop: "0.5rem",
            paddingBottom: "0.5rem",
            duration: 0.3,
            ease: "power2.inOut",
          });

          gsap.to(logoContainer, {
            scale: 0.8,
            duration: 0.3,
            ease: "power2.inOut",
          });
        } else {
          gsap.to(header, {
            paddingTop: "0",
            paddingBottom: "0",
            duration: 0.3,
            ease: "power2.inOut",
          });

          gsap.to(logoContainer, {
            scale: 1,
            duration: 0.3,
            ease: "power2.inOut",
          });
        }

        lastScrollY = currentScroll;
      });

      // Asegurarse de que el header esté visible al hacer scroll al principio
      window.addEventListener("scrollToTop", () => {
        gsap.to(header, {
          y: 0,
          duration: 0.3,
          ease: "power2.inOut",
        });
      });
    }
  });
</script>
